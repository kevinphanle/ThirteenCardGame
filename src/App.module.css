.btnContainer {
  display: flex;
  justify-content: center;
  gap: 1rem;
}

/* Container for the entire game to center the fixed-size table */
.board {
  display: flex;
  /* flex-direction: column; */
  /* align-items: center; */
  /* justify-content: center; */
  background-color: #1a1a1a;
  /* gap: 3rem; */
}

.startMessage {
  text-align: center;
  padding: 2rem;
  font-size: 1.5rem;
  color: #555;
}

.playArea {
  /* position: relative; */
  display: flex;
  flex-direction: column;
  flex-direction: center;
  justify-content: center;
  align-items: center;
  /* width: 80%; */
  /* height: 80%; */
  background-color: #f8f9fa;
  border-radius: 8px;
}

.playerHand {
  /* position: absolute; */
  display: flex;
  justify-content: center;
  align-items: center;

  &.bottom {
    bottom: 10px;
    left: 50%;
    /* transform: translateX(-50%); */
  }

  &.top {
    top: 10px;
    left: 50%;
    /* transform: translateX(-50%); */
  }

  &.left {
    top: 50%;
    left: 10px;
    /* transform: translateY(-50%); */
  }

  &.right {
    top: 50%;
    right: 10px;
    /* transform: translateY(-50%); */
  }
}

.deck {
  width: 100vw;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 1rem;
  padding: 1rem;
  border-radius: 8px;
  background-color: #ccc;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.cardContainer {
  position: absolute;
  transition: transform 0.2s;
}

.card {
  --width: 3.5em;
  --height: calc(var(--width) * 1.4);
  width: var(--width);
  height: var(--height);

  position: relative;
  border: 1px solid #333;
  border-radius: 8px;
  text-align: center;
  background-color: #fff;
  transition: transform 0.2s, box-shadow 0.2s;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  padding: 1em 1.2em;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);

  p {
    margin: 0;
  }

  .number {
    font-size: 1.5rem;
    font-weight: 500;
    margin-bottom: -0.35rem;
  }

  .suit {
    font-size: 1rem;
  }

  .topLeft,
  .bottomRight {
    position: absolute;
    font-size: 0.7em;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    letter-spacing: -0.1em;

    .suit {
      width: 8px;
      height: 8px;
    }
  }

  .topLeft {
    top: 0;
    left: 0.3rem;
  }

  .bottomRight {
    bottom: 0;
    right: 0.3rem;
    transform: rotate(180deg);
  }

  span {
    backface-visibility: hidden;
  }
}

.clickable {
  .card {
    &:active {
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
    &:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }
  }
}

.actionBtnContainer {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.disabledBtn {
  opacity: 0.5;
  cursor: not-allowed !important;
}

.hidden {
  transform: rotateY(180deg);
  padding: 0.5em;
}

.cardBack {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #1a6127; /* Green background like a playing card */
  border-radius: 8px;
  overflow: hidden;
  position: relative;
}

.cardBackPattern {
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: repeating-linear-gradient(
    45deg,
    rgba(255, 255, 255, 0.1),
    rgba(255, 255, 255, 0.1) 10px,
    rgba(255, 255, 255, 0.2) 10px,
    rgba(255, 255, 255, 0.2) 20px
  );
}

/* .cardBack:after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 80%;
  height: 80%;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 4px;
} */

.selected {
  border: 2px solid #007bff;
  background-color: #e0f7ff;
  transform: translateY(-20px);
}

.centerArea {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  flex-grow: 1;
  border-radius: 8px;
}

.suitArea {
  width: 100%;
  display: grid;
  justify-items: center;
  align-items: center;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(8, 1fr);
  position: relative;

  .suit {
    font-size: 1.5rem;
    grid-row-end: span 2;
    width: 100%;
    aspect-ratio: 1 / 1;
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
  }

  .rank {
    font-size: 2rem;
    font-weight: bold;
  }
}

.Hearts {
  background-image: url("icons/heart.svg");
}
.Diamonds {
  background-image: url("icons/diamond.svg");
}
.Spades {
  background-image: url("icons/spade.svg");
}
.Clubs {
  background-image: url("icons/club.svg");
}

.Hearts.king,
.Diamonds.king {
  background-image: url("icons/king-red.svg") !important;
}

.Spades.king,
.Clubs.king {
  background-image: url("icons/king-black.svg") !important;
}

.Hearts.queen,
.Diamonds.queen {
  background-image: url("icons/queen-red.svg") !important;
}

.Spades.queen,
.Clubs.queen {
  background-image: url("icons/queen-black.svg") !important;
}

.Hearts.jack,
.Diamonds.jack {
  background-image: url("icons/jack-red.svg") !important;
}

.Spades.jack,
.Clubs.jack {
  background-image: url("icons/jack-black.svg") !important;
}

.ace .suit,
.jack .suit,
.queen .suit,
.king .suit {
  grid-row-start: 2;
  grid-column-start: 1;
  grid-row-end: span 6;
  grid-column-end: span 3;
}

.two .suit {
  &:first-child {
    grid-row-start: 1;
    grid-column-start: 2;
  }

  &:nth-child(2) {
    grid-row-start: 7;
    grid-column-start: 2;
    transform: rotate(180deg);
  }
}

.three .suit {
  &:first-child {
    grid-row-start: 1;
    grid-column-start: 2;
  }

  &:nth-child(2) {
    grid-row-start: 4;
    grid-column-start: 2;
  }

  &:nth-child(3) {
    grid-row-start: 7;
    grid-column-start: 2;
    transform: rotate(180deg);
  }
}

.four .suit {
  &:first-child {
    grid-row-start: 1;
    grid-column-start: 1;
  }

  &:nth-child(2) {
    grid-row-start: 1;
    grid-column-start: 3;
  }

  &:nth-child(3) {
    grid-row-start: 7;
    grid-column-start: 1;
  }

  &:nth-child(4) {
    grid-row-start: 7;
    grid-column-start: 3;
  }
}

.five .suit {
  &:first-child {
    grid-row-start: 1;
    grid-column-start: 1;
  }

  &:nth-child(2) {
    grid-row-start: 1;
    grid-column-start: 3;
  }

  &:nth-child(3) {
    grid-row-start: 7;
    grid-column-start: 1;
    transform: rotate(180deg);
  }

  &:nth-child(4) {
    grid-row-start: 7;
    grid-column-start: 3;
    transform: rotate(180deg);
  }

  &:nth-child(5) {
    grid-row-start: 4;
    grid-column-start: 2;
  }
}

.six .suit {
  &:first-child {
    grid-row-start: 1;
    grid-column-start: 1;
  }

  &:nth-child(2) {
    grid-row-start: 1;
    grid-column-start: 3;
  }

  &:nth-child(3) {
    grid-row-start: 7;
    grid-column-start: 1;
    transform: rotate(180deg);
  }

  &:nth-child(4) {
    grid-row-start: 7;
    grid-column-start: 3;
    transform: rotate(180deg);
  }

  &:nth-child(5) {
    grid-row-start: 4;
    grid-column-start: 1;
  }

  &:nth-child(6) {
    grid-row-start: 4;
    grid-column-start: 3;
  }
}

.seven .suit {
  &:first-child {
    grid-row-start: 1;
    grid-column-start: 1;
  }

  &:nth-child(2) {
    grid-row-start: 1;
    grid-column-start: 3;
  }

  &:nth-child(3) {
    grid-row-start: 7;
    grid-column-start: 1;
    transform: rotate(180deg);
  }

  &:nth-child(4) {
    grid-row-start: 7;
    grid-column-start: 3;
    transform: rotate(180deg);
  }

  &:nth-child(5) {
    grid-row-start: 4;
    grid-column-start: 1;
  }

  &:nth-child(6) {
    grid-row-start: 4;
    grid-column-start: 3;
  }

  &:nth-child(7) {
    grid-row-start: 2;
    grid-column-start: 2;
  }
}

.eight .suit {
  &:first-child {
    grid-row-start: 1;
    grid-column-start: 1;
  }

  &:nth-child(2) {
    grid-row-start: 1;
    grid-column-start: 3;
  }

  &:nth-child(3) {
    grid-row-start: 7;
    grid-column-start: 1;
    transform: rotate(180deg);
  }

  &:nth-child(4) {
    grid-row-start: 7;
    grid-column-start: 3;
    transform: rotate(180deg);
  }

  &:nth-child(5) {
    grid-row-start: 4;
    grid-column-start: 1;
  }

  &:nth-child(6) {
    grid-row-start: 4;
    grid-column-start: 3;
  }

  &:nth-child(7) {
    grid-row-start: 2;
    grid-column-start: 2;
  }

  &:nth-child(8) {
    grid-row-start: 6;
    grid-column-start: 2;
    transform: rotate(180deg);
  }
}

.nine .suit {
  &:first-child {
    grid-row-start: 1;
    grid-column-start: 1;
  }

  &:nth-child(2) {
    grid-row-start: 3;
    grid-column-start: 1;
  }

  &:nth-child(3) {
    grid-row-start: 5;
    grid-column-start: 1;
    transform: rotate(180deg);
  }

  &:nth-child(4) {
    grid-row-start: 7;
    grid-column-start: 1;
    transform: rotate(180deg);
  }

  &:nth-child(5) {
    grid-row-start: 1;
    grid-column-start: 3;
  }

  &:nth-child(6) {
    grid-row-start: 3;
    grid-column-start: 3;
  }

  &:nth-child(7) {
    grid-row-start: 5;
    grid-column-start: 3;
    transform: rotate(180deg);
  }

  &:nth-child(8) {
    grid-row-start: 7;
    grid-column-start: 3;
    transform: rotate(180deg);
  }

  &:nth-child(9) {
    grid-row-start: 4;
    grid-column-start: 2;
  }
}

.ten .suit {
  &:first-child {
    grid-row-start: 1;
    grid-column-start: 1;
  }

  &:nth-child(2) {
    grid-row-start: 3;
    grid-column-start: 1;
  }

  &:nth-child(3) {
    grid-row-start: 5;
    grid-column-start: 1;
    transform: rotate(180deg);
  }

  &:nth-child(4) {
    grid-row-start: 7;
    grid-column-start: 1;
    transform: rotate(180deg);
  }

  &:nth-child(5) {
    grid-row-start: 1;
    grid-column-start: 3;
  }

  &:nth-child(6) {
    grid-row-start: 3;
    grid-column-start: 3;
  }

  &:nth-child(7) {
    grid-row-start: 5;
    grid-column-start: 3;
    transform: rotate(180deg);
  }

  &:nth-child(8) {
    grid-row-start: 7;
    grid-column-start: 3;
    transform: rotate(180deg);
  }

  &:nth-child(9) {
    grid-row-start: 2;
    grid-column-start: 2;
  }

  &:nth-child(10) {
    grid-row-start: 6;
    grid-column-start: 2;
    transform: rotate(180deg);
  }
}

.player {
  width: 100%;
  box-sizing: border-box;
  /* margin: 1rem 0; */
  /* padding: 1rem; */
  /* background-color:rgb(7, 7, 7); */
  border-radius: 8px;
  /* box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); */
  display: inline-block;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.cardContainer {
  position: absolute;
  transition: transform 0.2s;
}

.clickable {
  cursor: pointer;
}

.nonClickable {
  cursor: default;
}

.active-player {
  background-color: #e0f7ff;
  border: 1px solid blue;
  padding: 1rem;
  height: 300px;
}

.hand {
  display: flex;
  flex-wrap: wrap;
  gap: 0.4rem; /* Reduced from 0.5rem */
  position: relative;
  height: 112.4px;
  min-width: 456px;
}

.handHistoryContainer {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1rem;
  border-radius: 8px;
  width: 100%;
  box-sizing: border-box;
  height: 300px;
  background-color: rgba(0, 0, 0, 0.7);
  padding: 12px;
  color: white;
  margin-bottom: 15px;
  max-width: 600px;
  overflow-y: auto;
}

.handHistoryContainer h3 {
  cursor: pointer;
  user-select: none;
  margin: 0 0 10px 0;
  font-size: 1.2rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: #ffd700;
}

.handHistoryContainer .entry {
  margin-bottom: 10px;
  padding: 5px;
  border-bottom: 1px solid #eee;
}

/* Current play styles */
.currentPlay {
  margin-bottom: 15px;
  padding: 10px;
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 6px;
}

.currentPlayInfo {
  display: flex;
  justify-content: space-between;
  margin-bottom: 10px;
}

.handType {
  font-weight: bold;
  color: #ffd700;
}

.currentPlayCards {
  display: flex;
  justify-content: center;
}

.currentCardContainer {
  transition: transform 0.2s;
}

.currentCardContainer:hover {
  transform: translateY(-10px);
  z-index: 10;
}

/* History timeline */
.historyTimeline {
  max-height: 250px;
  padding-right: 10px;
  border-top: 1px solid rgba(255, 255, 255, 0.3);
  padding-top: 10px;
}

.historyEntry {
  display: flex;
  padding: 8px;
  margin-bottom: 8px;
  border-radius: 4px;
  align-items: center;
}

.passEntry {
  background-color: rgba(255, 0, 0, 0.2);
}

.playEntry {
  background-color: rgba(0, 255, 0, 0.2);
}

.playerIndicator {
  font-weight: bold;
  margin-right: 10px;
  padding: 3px 6px;
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 4px;
  font-size: 0.8rem;
  width: 80px;
  text-align: center;
}

.passIndicator {
  color: #ff6b6b;
  font-weight: bold;
  font-size: 0.9rem;
}

.playDetails {
  display: flex;
  flex-direction: column;
  flex: 1;
}

.playType {
  margin-bottom: 5px;
  font-size: 0.8rem;
}

.historyCards {
  display: flex;
}

.miniCardContainer {
  transform: scale(0.7);
  transform-origin: center left;
}

/* Casino-style poker table with static size */
.gameTable {
  padding: 5rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 10px;
  width: 1000px; /* Fixed width instead of 90% */
  margin: 0 auto;
  box-sizing: border-box;
  background-color: #2a2a2a;
  border-radius: 15px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
  position: relative;
}

/* Position each player in their grid area */
.topPlayer {
  position: absolute;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 10;
}

.leftPlayer {
  position: absolute;
  left: 95px;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
}

.rightPlayer {
  position: absolute;
  right: 95px;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
}

.bottomPlayer {
  position: absolute;
  bottom: -30px;
  left: 50%;
  transform: translateX(-50%);
  /* width: 600px; */
  z-index: 10;
}
/* Casino-style felt table surface */
.centerPlayArea {
  grid-area: center;
  background-color: #0f6335; /* Darker green felt from image */
  border-radius: 180px / 120px; /* More oval shape like in the image */
  border: 18px solid #472205; /* Dark wood trim like in image */
  box-shadow: inset 0 0 50px rgba(0, 0, 0, 0.5), 0 0 20px rgba(0, 0, 0, 0.4);
  padding: 30px;
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 400px; /* Fixed height for the table */
  width: 600px; /* Fixed max width for the table */
}

/* Table rail based on image */
.centerPlayArea:before {
  content: "";
  position: absolute;
  top: -18px;
  left: -18px;
  right: -18px;
  bottom: -18px;
  border-radius: 190px / 130px;
  background: linear-gradient(to bottom, #5a3616, #3d2409);
  z-index: -1;
}

/* Remove the middleSection as it's no longer needed with grid */
.middleSection {
  display: contents;
}

/* Adjust player styles for grid layout */
.topPlayer,
.bottomPlayer,
.leftPlayer,
.rightPlayer {
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 10px;
}

/* Adjust hand styles for side players */
.leftPlayer .hand,
.rightPlayer .hand {
  min-width: 300px;
  height: 120px;
}

/* Hand history container matching table style */
.handHistoryContainer {
  background-color: rgba(0, 0, 0, 0.3);
  border-radius: 10px;
  padding: 15px;
  color: white;
  max-width: 90%;
  backdrop-filter: blur(3px);
}

/* Board header styling */
.header {
  padding: 20px;
  background-color: #2a2a2a;
  border-right: 3px solid #0f6335;
  color: white;
  box-shadow: 2px 0 10px rgba(0, 0, 0, 0.3);
}

.header h1 {
  color: white;
  margin-top: 20px;
  font-size: 2rem;
  text-transform: uppercase;
  letter-spacing: 2px;
}

.btnContainer {
  display: flex;
  flex-direction: column;
  gap: 15px;
  width: 80%;
}

.btnContainer button {
  background-color: #0f6335;
  color: white;
  border: none;
  padding: 12px 16px;
  border-radius: 4px;
  cursor: pointer;
  font-weight: bold;
  transition: all 0.2s;
  width: 100%;
  font-size: 16px;
}

.btnContainer button:hover:not(:disabled) {
  background-color: #14894a;
}

/* Add these new styles for player avatars */
.playerAvatar {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative; /* For absolute positioning of thought bubble */
}

.avatarIcon {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background-color: #472205;
  border: 3px solid #d4af37;
  display: flex;
  justify-content: center;
  align-items: center;
  color: white;
  font-weight: bold;
  font-size: 24px;
  margin-bottom: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
}

.cardCount {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  border-radius: 4px;
  font-size: 14px;
  position: absolute;
  bottom: 10px;
}

.cardCount .cardIcon {
  background-color: white;
  border-radius: 3px;
  padding: 0.3em;

  span {
    color: black;
    font-weight: bold;
  }
}

.currentPlayer {
  border-color: #14ff70;
  animation: pulse 1.5s infinite;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(20, 255, 112, 0.7);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(20, 255, 112, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(20, 255, 112, 0);
  }
}

/* Make the user's avatar special */
.playerAvatar .avatarIcon:has(:contains("YOU")) {
  background-color: #d4af37; /* Gold background */
  color: #472205;
  font-size: 18px;
  font-weight: bold;
}

.userHandArea {
  display: flex;
  gap: 0.5rem;

  button {
    height: 100%;
  }
}

/* Thought bubble styles */
.playerStatus {
  position: absolute;
  top: -40px;
  left: 50%;
  transform: translateX(-50%);
  background-color: white;
  color: #333;
  padding: 8px 12px;
  border-radius: 15px;
  font-size: 14px;
  font-weight: bold;
  max-width: 100px;
  text-align: center;
  animation: pulsate 1.5s infinite;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

/* Create the thought bubble shape */
.playerStatus:before {
  content: "";
  position: absolute;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 20px;
  height: 20px;
  background-color: white;
  border-radius: 50%;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.playerStatus:after {
  content: "";
  position: absolute;
  bottom: -20px;
  left: 50%;
  transform: translateX(-50%);
  width: 10px;
  height: 10px;
  background-color: white;
  border-radius: 50%;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

/* Animation for the thinking bubble */
@keyframes pulsate {
  0% {
    transform: translateX(-50%) scale(1);
    opacity: 1;
  }
  50% {
    transform: translateX(-50%) scale(1.05);
    opacity: 0.8;
  }
  100% {
    transform: translateX(-50%) scale(1);
    opacity: 1;
  }
}
